[{"path":"https://boettiger-lab.github.io/earthdatalogin/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 earthdatalogin authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/articles/data-formats.html","id":"netcdf-1-gb-file","dir":"Articles","previous_headings":"","what":"netcdf, 1 GB file","title":"Data Formats","text":"Cloud-read data public AWS S3 bucket, https: Cloud read data, S3 protocol:","code":"url <- paste0(\"https://era5-pds.s3.amazonaws.com\",               \"/1979/01/data/air_pressure_at_mean_sea_level.nc\") r <- terra::rast(url, vsi=TRUE) r #> class       : SpatRaster  #> dimensions  : 721, 1440, 744  (nrow, ncol, nlyr) #> resolution  : 0.25, 0.25  (x, y) #> extent      : -0.125, 359.875, -90.125, 90.125  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source      : air_pressure_at_mean_sea_level.nc  #> names       : air_p~vel_1, air_p~vel_2, air_p~vel_3, air_p~vel_4, air_p~vel_5, air_p~vel_6, ...  #> unit        :          Pa,          Pa,          Pa,          Pa,          Pa,          Pa, ... Sys.setenv(\"AWS_NO_SIGN_REQUEST\"=TRUE) s3uri <- \"s3://era5-pds/1979/01/data/air_pressure_at_mean_sea_level.nc\" r <- terra::rast(s3uri) Sys.unsetenv(\"AWS_NO_SIGN_REQUEST\")"},{"path":"https://boettiger-lab.github.io/earthdatalogin/articles/data-formats.html","id":"zarr-31-tb","dir":"Articles","previous_headings":"","what":"Zarr, 31 TB","title":"Data Formats","text":"Cloud read 31 Terrabyte Zarr archive (S3, public https)","code":"url <- \"https://mur-sst.s3.us-west-2.amazonaws.com/zarr-v1\" prefixes <- 'ZARR:\\\"/vsicurl/' slice <- '\\\":/analysed_sst:0\"' addr <- paste0(prefixes, url, slice) y = terra::rast(addr) library(tmap) data(World)  india <-st_bbox( World$geometry[World$name == \"India\"] ) st_as_stars(y) |>   st_crop(india) |>   plot()"},{"path":"https://boettiger-lab.github.io/earthdatalogin/articles/gdalcubes-stac-cog.html","id":"earth-data-authentication","dir":"Articles","previous_headings":"","what":"Earth Data Authentication","title":"Data Cubes with STAC","text":"First let’s get EDL authentication way. cloud data almost STAC catalog (NOAA, USGS, Planetary Computer, etc), authentication either unnecessary already provided STAC API, NASA EDL special. usual, can handle edl_netrc(). gdalcubes package doesn’t respect global environmental variables, use helper utility export ’s configuration well.","code":"library(earthdatalogin) edl_netrc() with_gdalcubes()"},{"path":"https://boettiger-lab.github.io/earthdatalogin/articles/gdalcubes-stac-cog.html","id":"search-via-stac","dir":"Articles","previous_headings":"","what":"Search via STAC","title":"Data Cubes with STAC","text":"now use rstac package search one NASA collections data falls desired bounding box space time: Note 98 features matched search criteria! feature represents ‘snapshot’ image taken satellite passes (harmonized product actually ’s quite lot post-processing.) feature thus shares bounding box, projection, timestamp, may consist many different ‘assets’, different COG files representing different spectral bands satellite camera instrument. feature can potentially include quite extensive metadata feature, including details instrument post-processing, cloud cover. Unfortunately, EarthData’s STAC metadata tends quite sparse.","code":"bbox <- c(xmin=-123, ymin=37.25, xmax=-122.0, ymax=38.25)  start <- \"2021-12-01\" end <- \"2022-05-31\"  # Find all assets from the desired catalog: items <- stac(\"https://cmr.earthdata.nasa.gov/stac/LPCLOUD\") |>    stac_search(collections = \"HLSL30.v2.0\",               bbox = bbox,               datetime = paste(start,end, sep = \"/\")) |>   post_request() |>   items_fetch() |>   items_filter(properties[[\"eo:cloud_cover\"]] < 20) #>    |                                                                                                                                                                                                                                                                   |==========================================================================================================================================================================================================================================================| 100%"},{"path":"https://boettiger-lab.github.io/earthdatalogin/articles/gdalcubes-stac-cog.html","id":"building-a-data-cube","dir":"Articles","previous_headings":"","what":"Building a Data Cube","title":"Data Cubes with STAC","text":"","code":"# Desired data cube shape & resolution v = cube_view(srs = \"EPSG:4326\",               extent = list(t0 = as.character(start),                              t1 = as.character(end),                             left = bbox[1], right = bbox[3],                             top = bbox[4], bottom = bbox[2]),               nx = 512, ny = 512, dt = \"P1M\") # RGB bands + cloud cover mask col <- stac_image_collection(items$features,                               asset_names = c(\"B02\", \"B03\", \"B04\", \"Fmask\"))  # use a cloud mask -- see # https://lpdaac.usgs.gov/documents/1326/HLS_User_Guide_V2.pdf  cloud_mask <- image_mask(\"Fmask\", values=1) # Here we go! note eval is lazy raster_cube(col, v, mask=cloud_mask) |>   select_bands(c(\"B02\",\"B03\", \"B04\")) |>   plot(rgb=3:1)"},{"path":"https://boettiger-lab.github.io/earthdatalogin/articles/motivations.html","id":"earthdata","dir":"Articles","previous_headings":"","what":"Earthdata","title":"Motivations: What is Cloud-Native Access Anyway?","text":"NASA EarthData taken somewhat novel approach situation. allow users access publicly funded data resources without paying Amazon privilege, NASA created EarthDataLogin system routes public https requests data products system redirects CloudFlare content distribution network. Adding extra routing gives NASA mechanism imposing rate-limits – reducing egress costs throttling rate amount data one user can access. (AWS offer data providers ability set rate limits directly.) routing requires users register provide authentication token, freely available EarthDataLogin platform API. prefer mechanism default, code written use mechanism portable compute network connection available. approach actually supports two different implementations. One approach use HTTP Basic Auth, supplying user name password (typically using .netrc file). Another uses Bearer <token> request header, authentication mechanism introduced HTTP OAuth 2.0. users willing pay Amazon compute inside us-west-2, can take advantage extremely fast network without paying egress charges (since data egress occurs.) Perhaps surprisingly, internal access still requires authentication generate AWS access tokens (id, secret token, session token). tokens work compute inside AWS data center – trying use tokens machines throw Access Denied error. inconveniently, tokens specific NASA’s 12 different DAACs (despite 12 DAACs using us-west-2 host data. gives DAACs insight use statistics also obtained S3 logs anyway). inconveniently , tokens expire one hour must renewed, potentially interrupting precisely kind intensive, long-running computations user want inside local area network run.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/articles/non-egressed.html","id":"earth-data-authentication","dir":"Articles","previous_headings":"","what":"Earth Data Authentication","title":"Access within AWS Compute","text":"create S3 tokens, use edl_s3_token. Note must specify endpoint DAAC trying access – e.g. LP DAAC case. Remember, token work within us-west-2 hub, LP DAAC data, expire 1 hr issued. can search STAC API case. step require authentication. STAC search returns item metadata including links data object https URLs. ideal bearer token access, want convert S3-style addresses. function gdalcubes::stac_image_collection() actually takes optional argument URLs handled. helper function edl_as_s3() provides convenient way (trivial step, just remove domain name replace GDAL’s S3 prefix, /vsis3):","code":"edl_s3_token(daac = \"https://data.lpdaac.earthdatacloud.nasa.gov\") bbox <- c(xmin=-122.5, ymin=37.5, xmax=-122.0, ymax=38)  start <- \"2022-01-01\" end <- \"2022-06-30\"  # Find all assets from the desired catalog: items <- stac(\"https://cmr.earthdata.nasa.gov/stac/LPCLOUD\") |>    stac_search(collections = \"HLSL30.v2.0\",               bbox = bbox,               datetime = paste(start,end, sep = \"/\")) |>   post_request() |>   items_fetch() |>   items_filter(filter_fn = \\(x) {x[[\"eo:cloud_cover\"]] < 20}) col <-    stac_image_collection(items$features,                          asset_names = c(\"B02\", \"B03\", \"B04\", \"Fmask\"),                         url_fun = \\(url) edl_as_s3(url, prefix = \"/vsis3/\")) # Desired data cube shape & resolution v = cube_view(srs = \"EPSG:4326\",               extent = list(t0 = as.character(start),                              t1 = as.character(end),                             left = bbox[1], right = bbox[3],                             top = bbox[4], bottom = bbox[2]),                 nx = 2048, ny = 2048, dt = \"P1M\")  cloud_mask <- image_mask(\"Fmask\", values=1) # mask clouds and cloud shadows rgb_bands <- c(\"B04\",\"B03\", \"B02\")  # Here we go! note eval is lazy raster_cube(col, v, mask=cloud_mask) |>   select_bands(rgb_bands) |>   plot(rgb=1:3)"},{"path":"https://boettiger-lab.github.io/earthdatalogin/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Carl Boettiger. Author, maintainer, copyright holder. Luis López. Author. Yuvi Panda. Author. Bri Lind. Author. Andy Teucher. Contributor. . Funder.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Boettiger C, López L, Panda Y, Lind B (2025). earthdatalogin: NASA 'EarthData' Access Utilities. R package version 0.0.2.99, https://github.com/boettiger-lab/earthdatalogin, https://boettiger-lab.github.io/earthdatalogin/.","code":"@Manual{,   title = {earthdatalogin: NASA 'EarthData' Access Utilities},   author = {Carl Boettiger and Luis López and Yuvi Panda and Bri Lind},   year = {2025},   note = {R package version 0.0.2.99, https://github.com/boettiger-lab/earthdatalogin},   url = {https://boettiger-lab.github.io/earthdatalogin/}, }"},{"path":"https://boettiger-lab.github.io/earthdatalogin/index.html","id":"earthdatalogin-artificial_satellite-earth_asia","dir":"","previous_headings":"","what":"NASA EarthData Access Utilities","title":"NASA EarthData Access Utilities","text":"earthdatalogin seeks streamline process accessing NASA data Earth Data cloud program anywhere. Amazon Web Services (AWS) typically charges egress fees whenever network traffic leaves data center hosts , NASA restricted access data hosted Amazon accessible AWS servers running data center (us-west-2) using S3 access protocol. However, NASA also makes cloud data available publicly machine using standard HTTPS connection. cases require requesting managing credentials tied registered user name. package merely makes process easier.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"NASA EarthData Access Utilities","text":"earthdatalogin now CRAN, can simply installed can install development version earthdatalogin GitHub:","code":"install.packages(\"earthdatalogin\") # install.packages(\"devtools\") devtools::install_github(\"boettiger-lab/earthdatalogin\")"},{"path":"https://boettiger-lab.github.io/earthdatalogin/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"NASA EarthData Access Utilities","text":"Access EarthData free, users required register. Currently, earthdatalogin provides ’s default credentials quick start. Users still encouraged register credentials! easiest portable method access using netrc basic authentication protocol HTTP. Call edl_netrc() set given username password (passed optional arguments read environmental variables. neither provides credentials, earthdatalogin provide ’s credentials, may experience rate limits readily): edl_netrc() called, existing spatial data packages R can seamlessly access NASA Earthdata HTTP links. Note special earthdatalogin functions needed rest code. important lets user take advantage existing R packages tutorials without modification, authentication barrier NASA EarthData first place. called edl_netrc() authentication, throw error file exist. call needs made per session (.e. start script.)","code":"library(earthdatalogin) edl_netrc() url <- \"https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T56JKT.2023246T235950.v2.0/HLS.L30.T56JKT.2023246T235950.v2.0.SAA.tif\"  terra::rast(url, vsi=TRUE) #> class       : SpatRaster  #> dimensions  : 3660, 3660, 1  (nrow, ncol, nlyr) #> resolution  : 30, 30  (x, y) #> extent      : 199980, 309780, 7190200, 7300000  (xmin, xmax, ymin, ymax) #> coord. ref. : WGS 84 / UTM zone 56N (EPSG:32656)  #> source      : HLS.L30.T56JKT.2023246T235950.v2.0.SAA.tif  #> name        : HLS.L30.T56JKT.2023246T235950.v2.0.SAA"},{"path":"https://boettiger-lab.github.io/earthdatalogin/index.html","id":"how-does-it-work","dir":"","previous_headings":"","what":"How does it work?","title":"NASA EarthData Access Utilities","text":"R packages (terra, sf, stars, others) access spatial data using underlying C++ library called GDAL.1 GDAL also used hood many spatial tools, Python (geopandas, rasterio, others) QGIS Google Earth Engine. earthdatalogin sets collection config files environmental variables used GDAL allow access authentication credentials. Crucially, use netrc-based authentication works just well running laptop running inside AWS compute us-west-2 – using popular Openscapes 2i2c hub. portability hold mechanisms, S3-based login, case NASA EarthData works inside AWS-based compute, true bearer token mechanism, works outside AWS-based compute. earthdatalogin package provide functions using authentication mechanisms (see edl_s3_token() edl_set_token()), discourages use less portable offering performance advantage.2 function takes care managing tokens . don’t tokens, request one minted. user name tokens already, look re-use . (EDL issue two tokens per user, tokens expire 6 month, users shouldn’t need worry since edl_set_token() handles ). function also set token GDAL environmental variable. means popular R packages terra, sf stars involve bindings GDAL automatically able utilize token operations reading HTTPS (using vsicurl prefix).","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/index.html","id":"cloud-native-workflows","dir":"","previous_headings":"","what":"Cloud native workflows","title":"NASA EarthData Access Utilities","text":"NASA EarthData also first introduction cloud-hosted data many researchers, fact NASA tries minimize egress charges restricting S3 access requests coming AWS us-west-2 compute center sometimes gives false impression accessing data “cloud” requires also paying Amazon Web Services compute time. entirely spurious. instance, NOAA also provides extensive set regularly updated data products AWS without restriction, can accessed standard HTTPS connection using S3 protocol anonymous user (keys tokens). maximize performance, heavy users NOAA data frequently choose access data AWS compute region (mostly us-east-1 NOAA), required. Technically speaking, frequently use vernacular phrase “accessing cloud data” refer network based access data using HTTP range requests – ability ask web server transfer range bytes individual file rather transferring entire file across network. Note can now successfully access file https machine internet connection, authentication steps. URL obtained variety ways, including https://search.earthdata.nasa.gov/search, searching individual DAACs, programmatically using EarthData STAC catalog. point despite barrier earthdatalogin, R code required cloud-native access now matches standard strategies use cloud-native access data source. key feature makes ‘cloud native’ access fast access lazy. though individual files quite large, request downloaded entire file – instead used knowledge spatial data formats read just bytes file provide critical metadata extent, projection, bands coordinate ranges. Using information, can extract just bits data (locations, variables) care without download everything else well. saves RAM computer, drive space disks, well speeding download. Without techniques, processing massive amounts data coming modern earth observation methods impractical. However, data formats equally amenable approach. Requesting bytes file across hundreds miles network connection thing requesting bytes across six inches PCI connection processor hard-drive. recent formats like “Cloud Optimized Geotiff” (COG) files , name suggests, optimized . Complex older formats like HDF5 GRIB much less efficient. Network based range requests possible older (still widely used) formats, like HDF4. last case, need download file local disk (POSIX filesystem, hyperscale Object Store) read . Use edl_download() handle authenticated downloads case.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"NASA EarthData Access Utilities","text":"facilitate cloud-native access NASA EarthData R, package also includes series vignettes illustrating use popular R packages (often less well-known) cloud-native modes. vignettes, take care leverage “lazy evaluation” avoid downloading . exception vignette S3 access within us-west-2, vignettes run anywhere, effective machines fast network access. Many university networks, cloud-hosted platform, GitHub Codespaces, offer excellent network performance purpose.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/collections_fetch.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch all collections from an rstac::collections() query — collections_fetch","title":"Fetch all collections from an rstac::collections() query — collections_fetch","text":"default, NASA STAC catalogue collections queries return 10 collections time. function page collections return .","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/collections_fetch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch all collections from an rstac::collections() query — collections_fetch","text":"","code":"collections_fetch(collections, ...)"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/collections_fetch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch all collections from an rstac::collections() query — collections_fetch","text":"collections object class doc_collections returned calling rstac::get_request() rstac::collections() query ... Optional arguments passed httr::GET()","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/collections_fetch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch all collections from an rstac::collections() query — collections_fetch","text":"doc_collections object collections catalogue specified rstac::collections() query.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/collections_fetch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch all collections from an rstac::collections() query — collections_fetch","text":"","code":"if (FALSE) { # interactive()   rstac::stac(\"https://cmr.earthdata.nasa.gov/stac/LPCLOUD\") |>     rstac::collections() |>     rstac::get_request() |>     collections_fetch() }"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_as_s3.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace https URLs with S3 URIs — edl_as_s3","title":"Replace https URLs with S3 URIs — edl_as_s3","text":"Replace https URLs S3 URIs","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_as_s3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace https URLs with S3 URIs — edl_as_s3","text":"","code":"edl_as_s3(href, prefix = \"s3://\")"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_as_s3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace https URLs with S3 URIs — edl_as_s3","text":"href https URL EarthData Cloud address prefix preferred s3 prefix, e.g. s3:// (understood gdalcubes), /vsis3, terra/stars/sf GDAL-based interfaces.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_as_s3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace https URLs with S3 URIs — edl_as_s3","text":"URI strips basename protocol appends prefix","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_as_s3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace https URLs with S3 URIs — edl_as_s3","text":"","code":"href <- lpdacc_example_url() edl_as_s3(href) #> [1] \"s3://lp-prod-protected/HLSL30.020/HLS.L30.T56JKT.2023246T235950.v2.0/HLS.L30.T56JKT.2023246T235950.v2.0.SAA.tif\""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_download.html","id":null,"dir":"Reference","previous_headings":"","what":"download assets from earthdata over https using bearer tokens — edl_download","title":"download assets from earthdata over https using bearer tokens — edl_download","text":"NOTE: used primarily fallback mechanism! EarthData Cloud resources often best accessed directly HTTPS without download.  allows subsets extracted instead downloading unnecessary bits.  Unfortunately, certain formats support HTTP-based range requests (e.g. HDF4), require asset downloaded local POSIX filesystem first.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"download assets from earthdata over https using bearer tokens — edl_download","text":"","code":"edl_download(   href,   dest = basename(href),   auth = \"netrc\",   method = \"httr\",   username = default(\"user\"),   password = default(\"password\"),   netrc_path = edl_netrc_path(),   cookie_path = edl_cookie_path(),   quiet = TRUE,   ... )"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"download assets from earthdata over https using bearer tokens — edl_download","text":"href https URL asset dest local destination auth authentication method (\"token\" Bearer tokens \"netrc\" netrc.) method download method, either \"httr\" \"curl\". username EarthData Login User password EarthData Login Password netrc_path Path .netrc file created. Defaults appropriate R package configuration location given tools::R_user_dir(). cookie_path Path file cookies stored.  Defaults appropriate R package configuration location given tools::R_user_dir(). quiet logical default TRUE. Show progress download? ... additional arguments download.file(), e.g. quiet = TRUE.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"download assets from earthdata over https using bearer tokens — edl_download","text":"dest path, invisibly","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"download assets from earthdata over https using bearer tokens — edl_download","text":"","code":"if (FALSE) { # interactive() href <- lpdacc_example_url() edl_download(href) }"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_extract_urls.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract data URLs from edl_search — edl_extract_urls","title":"Extract data URLs from edl_search — edl_extract_urls","text":"NOTE function uses heuristic rules extract data edl_search(). Users strongly encouraged rely STAC searches instead.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_extract_urls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract data URLs from edl_search — edl_extract_urls","text":"","code":"edl_extract_urls(items)"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_extract_urls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract data URLs from edl_search — edl_extract_urls","text":"items content object edl_search","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_extract_urls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract data URLs from edl_search — edl_extract_urls","text":"character vector URLs","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_extract_urls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract data URLs from edl_search — edl_extract_urls","text":"","code":"if (FALSE) { # interactive()  items <- edl_search(short_name = \"MUR-JPL-L4-GLOB-v4.1\",                    temporal = c(\"2020-01-01\", \"2021-12-31\"),                    parse_urls = FALSE)  urls <- edl_extract_urls(items) }"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_netrc.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up Earthdata Login (EDL) credentials using a .netrc file — edl_netrc","title":"Set up Earthdata Login (EDL) credentials using a .netrc file — edl_netrc","text":"function creates .netrc file Earthdata Login (EDL) credentials (username password) sets necessary environment variables GDAL use .netrc file.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_netrc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up Earthdata Login (EDL) credentials using a .netrc file — edl_netrc","text":"","code":"edl_netrc(   username = default(\"user\"),   password = default(\"password\"),   netrc_path = edl_netrc_path(),   cookie_path = edl_cookie_path(),   cloud_config = TRUE )"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_netrc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up Earthdata Login (EDL) credentials using a .netrc file — edl_netrc","text":"username EarthData Login User password EarthData Login Password netrc_path Path .netrc file created. Defaults appropriate R package configuration location given tools::R_user_dir(). cookie_path Path file cookies stored.  Defaults appropriate R package configuration location given tools::R_user_dir(). cloud_config set gdal_cloud_config() env vars well? logical, default TRUE.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_netrc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up Earthdata Login (EDL) credentials using a .netrc file — edl_netrc","text":"TRUE invisibly successful","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_netrc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set up Earthdata Login (EDL) credentials using a .netrc file — edl_netrc","text":"function sets environment variables GDAL_HTTP_NETRC GDAL_HTTP_NETRC_FILE enable GDAL use .netrc file EDL authentication. GDAL_HTTP_COOKIEFILE GDAL_HTTP_COOKIEJAR also set allow authentication store read access cookies. Additionally, manages creation symbolic link .netrc file GDAL version less 3.7.0 (thus support GDAL_HTTP_NETRC_FILE location).","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_netrc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set up Earthdata Login (EDL) credentials using a .netrc file — edl_netrc","text":"","code":"if (FALSE) { # interactive()  edl_netrc() url <- lpdacc_example_url() terra::rast(url, vsi=TRUE) }"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_revoke_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Revoke an EarthData token — edl_revoke_token","title":"Revoke an EarthData token — edl_revoke_token","text":"Users can 2 active tokens time. need keep track token since earthdatalogin can retrieve tokens user name password.  However, want revoke token, can function.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_revoke_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Revoke an EarthData token — edl_revoke_token","text":"","code":"edl_revoke_token(   username = default(\"user\"),   password = default(\"password\"),   token_number = 1 )"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_revoke_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Revoke an EarthData token — edl_revoke_token","text":"username EarthData Login User password EarthData Login Password token_number token (1 2)","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_revoke_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Revoke an EarthData token — edl_revoke_token","text":"API response (invisibly)","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_revoke_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Revoke an EarthData token — edl_revoke_token","text":"","code":"if (FALSE) { # interactive() edl_revoke_token() }"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_s3_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Receive and set temporary AWS Tokens for S3 access — edl_s3_token","title":"Receive and set temporary AWS Tokens for S3 access — edl_s3_token","text":"Note S3 credentials work:","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_s3_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Receive and set temporary AWS Tokens for S3 access — edl_s3_token","text":"","code":"edl_s3_token(   daac = \"https://data.lpdaac.earthdatacloud.nasa.gov\",   username = default(\"user\"),   password = default(\"password\"),   prompt_for_netrc = interactive() )"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_s3_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Receive and set temporary AWS Tokens for S3 access — edl_s3_token","text":"daac base URL DAAC username EarthDataLogin user password EarthDataLogin Password prompt_for_netrc Often netrc preferable, function default prompt user switch.  Set FALSE silence .","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_s3_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Receive and set temporary AWS Tokens for S3 access — edl_s3_token","text":"list access key, secret key, session token expiration, invisibly.  Also sets corresponding AWS environmental variables.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_s3_token.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Receive and set temporary AWS Tokens for S3 access — edl_s3_token","text":"AWS instance us-west-2 region one hour expire DAAC requested Please consider using edl_netrc() avoid limitations","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_s3_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Receive and set temporary AWS Tokens for S3 access — edl_s3_token","text":"","code":"if (FALSE) { # interactive() edl_s3_token() }"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for data products using the EarthData API — edl_search","title":"Search for data products using the EarthData API — edl_search","text":"NOTE: Use fallback method ! Users strongly encouraged rely STAC endpoints NASA EarthData, shown package vignettes.  STAC widely used metadata standard NASA many providers, can searched using feature-rich rstac package.  STAC return items can easily parsed well.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for data products using the EarthData API — edl_search","text":"","code":"edl_search(   short_name = NULL,   version = NULL,   doi = NULL,   daac = NULL,   provider = NULL,   temporal = NULL,   bounding_box = NULL,   page_size = 2000,   recurse = TRUE,   parse_results = TRUE,   username = default(\"user\"),   password = default(\"password\"),   netrc_path = edl_netrc_path(),   cookie_path = edl_cookie_path(),   ... )"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for data products using the EarthData API — edl_search","text":"short_name dataset short name e.g. ATL08 version dataset version doi DOI dataset daac NSIDC PODAAC provider particular DAAC, e.g. POCLOUD, LPDAAC etc. temporal c(\"yyyy-mm-dd\", \"yyyy-mm-dd\") bounding_box c(lower_left_lon, lower_left_lat, upper_right_lon, upper_right_lat) page_size maximum number results return per query. recurse query returns page_size results, make recursive calls return results? parse_results logical, default TRUE. Calls edl_extract_urls() determine url links data objects.  Set FALSE return full API response object, wary large object sizes search returns many results. username EarthData Login User password EarthData Login Password netrc_path Path .netrc file created. Defaults appropriate R package configuration location given tools::R_user_dir(). cookie_path Path file cookies stored.  Defaults appropriate R package configuration location given tools::R_user_dir(). ... additional query parameters","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for data products using the EarthData API — edl_search","text":"character vector data URLs matching search criteria, parse_results = TRUE (default).  Otherwise, returns response object returned search information parse_results = FALSE.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for data products using the EarthData API — edl_search","text":"","code":"if (FALSE) { # interactive()  items <- edl_search(short_name = \"MUR-JPL-L4-GLOB-v4.1\",                    temporal = c(\"2002-01-01\", \"2021-12-31\"),                    recurse = TRUE,                    parse_urls = TRUE)  urls <- edl_extract_urls(items) }"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_set_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Get or set an earthdata login token — edl_set_token","title":"Get or set an earthdata login token — edl_set_token","text":"function ping EarthData API available tokens. token found, request one.  may two active tokens given time.  Use edl_revoke_token remove unwanted tokens.  default, function also set environmental variable active R session store token.  allows popular R packages use gdal immediately authenticate http addresses NASA EarthData assets.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_set_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get or set an earthdata login token — edl_set_token","text":"","code":"edl_set_token(   username = default(\"user\"),   password = default(\"password\"),   token_number = 1,   set_env_var = TRUE,   format = c(\"token\", \"header\", \"file\"),   prompt_for_netrc = interactive() )"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_set_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get or set an earthdata login token — edl_set_token","text":"username EarthData Login User password EarthData Login Password token_number token (1 2) set_env_var set GDAL_HTTP_HEADER_FILE environmental variable?  logical, default TRUE. format One \"token\", \"header\" \"file.\"  \"header\" adds prefix used http headers return string.  \"file\" returns prompt_for_netrc Often netrc preferable, function default prompt user switch.  Set FALSE silence .","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_set_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get or set an earthdata login token — edl_set_token","text":"text string containing token (format=token), token header prefix included, Authorization: Bearer <token>","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_set_token.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get or set an earthdata login token — edl_set_token","text":"IMPORTANT: necessary unset token using edl_unset_token() trying access HTTP resources part EarthData, setting token cause calls fail! simply use edl_netrc() authenticate without facing issue. NOTE: GDAL >= 3.6.1 required recognize GDAL_HTTP_HEADERS, versions recognize GDAL_HTTP_HEADER_FILE. set Bearer token temporary file provide path GDAL_HTTP_HEADER_FILE improve compatibility older versions.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_set_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get or set an earthdata login token — edl_set_token","text":"","code":"if (FALSE) { # interactive() edl_set_token() edl_unset_token() }"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_stac_urls.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for extracting URLs from STAC — edl_stac_urls","title":"Helper function for extracting URLs from STAC — edl_stac_urls","text":"Helper function extracting URLs STAC","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_stac_urls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for extracting URLs from STAC — edl_stac_urls","text":"","code":"edl_stac_urls(items, assets = \"data\")"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_stac_urls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for extracting URLs from STAC — edl_stac_urls","text":"items items list rstac assets name(s) assets extract","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_stac_urls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for extracting URLs from STAC — edl_stac_urls","text":"vector hrefs discovered assets.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_unset_netrc.html","id":null,"dir":"Reference","previous_headings":"","what":"edl_unset_netrc — edl_unset_netrc","title":"edl_unset_netrc — edl_unset_netrc","text":"Unsets environmental variables set edl_netrc() removes configuration files set edl_netrc().","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_unset_netrc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"edl_unset_netrc — edl_unset_netrc","text":"","code":"edl_unset_netrc(   netrc_path = edl_netrc_path(),   cookie_path = edl_cookie_path(),   cloud_config = TRUE )"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_unset_netrc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"edl_unset_netrc — edl_unset_netrc","text":"netrc_path Path .netrc file created. Defaults appropriate R package configuration location given tools::R_user_dir(). cookie_path Path file cookies stored.  Defaults appropriate R package configuration location given tools::R_user_dir(). cloud_config set gdal_cloud_config() env vars well? logical, default TRUE.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_unset_netrc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"edl_unset_netrc — edl_unset_netrc","text":"invisible TRUE, successful (even env set.)","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_unset_netrc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"edl_unset_netrc — edl_unset_netrc","text":"Note function rarely necessary, unlike bearer token-based auth, netrc mapped domain name interfere access non-earthdata-based URLs.  may still necessary deactivate order use one earthdatalogin authentication methods. unset environmental variables without removing files, set file path argument \"\" (see examples) Note GDAL_HTTP_NETRC defaults YES.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_unset_netrc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"edl_unset_netrc — edl_unset_netrc","text":"","code":"if (FALSE) { # interactive()   edl_unset_netrc()   # unset environmental variables only  edl_unset_netrc(\"\", \"\") }"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_unset_s3.html","id":null,"dir":"Reference","previous_headings":"","what":"Unset AWS S3 Environment Variables — edl_unset_s3","title":"Unset AWS S3 Environment Variables — edl_unset_s3","text":"function uses Sys.unsetenv() remove specified environment variables.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_unset_s3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unset AWS S3 Environment Variables — edl_unset_s3","text":"","code":"edl_unset_s3()"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_unset_s3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Unset AWS S3 Environment Variables — edl_unset_s3","text":"function unsets AWS S3-related environment variables: AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_SESSION_TOKEN.","code":""},{"path":[]},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_unset_s3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unset AWS S3 Environment Variables — edl_unset_s3","text":"","code":"if (FALSE) { # interactive() edl_unset_s3() }"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_unset_token.html","id":null,"dir":"Reference","previous_headings":"","what":"unset token — edl_unset_token","title":"unset token — edl_unset_token","text":"External sources need token may error token set. Call edl_unset_token accessing non-EarthData URLs.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_unset_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"unset token — edl_unset_token","text":"","code":"edl_unset_token()"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_unset_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"unset token — edl_unset_token","text":"unsets environmental variables token (return object)","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/edl_unset_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"unset token — edl_unset_token","text":"","code":"edl_unset_token()"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/gdal_cloud_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Recommended GDAL configuration for cloud-based access — gdal_cloud_config","title":"Recommended GDAL configuration for cloud-based access — gdal_cloud_config","text":"Sets GDAL environmental variables recommended optimum settings cloud-based access.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/gdal_cloud_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recommended GDAL configuration for cloud-based access — gdal_cloud_config","text":"","code":"gdal_cloud_config()"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/gdal_cloud_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recommended GDAL configuration for cloud-based access — gdal_cloud_config","text":"sets recommended environmental variables returns invisible TRUE successful.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/gdal_cloud_config.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recommended GDAL configuration for cloud-based access — gdal_cloud_config","text":"Based https://gdalcubes.github.io/source/concepts/config.html#recommended-settings--cloud-access","code":""},{"path":[]},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/gdal_cloud_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recommended GDAL configuration for cloud-based access — gdal_cloud_config","text":"","code":"if (FALSE) { # interactive() gdal_cloud_config()  # remove settings: gdal_cloud_unconfig() }"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/gdal_cloud_unconfig.html","id":null,"dir":"Reference","previous_headings":"","what":"Restores GDAL default configuration — gdal_cloud_unconfig","title":"Restores GDAL default configuration — gdal_cloud_unconfig","text":"Unsets GDAL environmental variables set gdal_cloud_config()","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/gdal_cloud_unconfig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restores GDAL default configuration — gdal_cloud_unconfig","text":"","code":"gdal_cloud_unconfig()"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/gdal_cloud_unconfig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Restores GDAL default configuration — gdal_cloud_unconfig","text":"invisible TRUE successful.","code":""},{"path":[]},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/gdal_cloud_unconfig.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Restores GDAL default configuration — gdal_cloud_unconfig","text":"","code":"if (FALSE) { # interactive() gdal_cloud_config()  # remove settings: gdal_cloud_unconfig() }"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/lpdacc_example_url.html","id":null,"dir":"Reference","previous_headings":"","what":"URL for an example of an LP DAAC COG file — lpdacc_example_url","title":"URL for an example of an LP DAAC COG file — lpdacc_example_url","text":"URL example LP DAAC COG file","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/lpdacc_example_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"URL for an example of an LP DAAC COG file — lpdacc_example_url","text":"","code":"lpdacc_example_url()"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/lpdacc_example_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"URL for an example of an LP DAAC COG file — lpdacc_example_url","text":"URL Cloud-Optimized Geotiff file LP DAAC.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/lpdacc_example_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"URL for an example of an LP DAAC COG file — lpdacc_example_url","text":"","code":"lpdacc_example_url() #> [1] \"https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/HLSL30.020/HLS.L30.T56JKT.2023246T235950.v2.0/HLS.L30.T56JKT.2023246T235950.v2.0.SAA.tif\""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/with_gdalcubes.html","id":null,"dir":"Reference","previous_headings":"","what":"with_gdalcubes — with_gdalcubes","title":"with_gdalcubes — with_gdalcubes","text":"expose GDAL_* VSI_* environmental variables gdalcubes, calls GDAL isolated environment respect global environmental variables.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/with_gdalcubes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"with_gdalcubes — with_gdalcubes","text":"","code":"with_gdalcubes(env = Sys.getenv())"},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/with_gdalcubes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"with_gdalcubes — with_gdalcubes","text":"env named vector set environmental variables. Default usually best, configure relevant global environmental variables gdalcubes.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/with_gdalcubes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"with_gdalcubes — with_gdalcubes","text":"NULL, invisibly.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/reference/with_gdalcubes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"with_gdalcubes — with_gdalcubes","text":"","code":"with_gdalcubes()"},{"path":"https://boettiger-lab.github.io/earthdatalogin/news/index.html","id":"earthdatalogin-development-version","dir":"Changelog","previous_headings":"","what":"earthdatalogin (development version)","title":"earthdatalogin (development version)","text":"adds experimental support CMR search edl_search(). support use cases, STAC-based search still recommended. Adds collections_fetch() working results collections() query using rstac package. NASA STAC API default return 10 collections given catalogue; function allows retrieve (#11). Adds edl_stac_urls() retrieving urls rstac items list.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/news/index.html","id":"earthdatalogin-002","dir":"Changelog","previous_headings":"","what":"earthdatalogin 0.0.2","title":"earthdatalogin 0.0.2","text":"CRAN release: 2023-12-15 Adds support netrc-based authentication. edl_set_token() works outside us-west-2, edl_s3_token() works inside us-west-2, netrc works anywhere. Additionally, netrc-based auth deactivated accessing non-earthdatalogin URLs. edl_netrc() sets netrc-based access. edl_unset_netrc() reverses , rarely needed. Using authentication methods interactive mode now prompt users switch edl_netrc() default. edl_download() also use netrc auth default greater portability. gdal_cloud_config() sets recommended settings GDAL cloud configuration, see https://gdalcubes.github.io/source/concepts/config.html#recommended-settings--cloud-access. default, edl_netrc() automatically configure well. gdalcubes package read environmental variables set edl_netrc() authentication methods, new helper function, with_gdalcubes() set gdal configuration gdalcubes package. Documentation also updated.","code":""},{"path":"https://boettiger-lab.github.io/earthdatalogin/news/index.html","id":"earthdatalogin-001","dir":"Changelog","previous_headings":"","what":"earthdatalogin 0.0.1","title":"earthdatalogin 0.0.1","text":"CRAN release: 2023-11-16 Initial CRAN submission.","code":""}]
